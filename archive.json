{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2023-07-06T01:20:43.245437+00:00",
  "repo": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOJZ2aqs5mOZGo",
      "title": "Extensibility point - Allowing for different types of statuses",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/1",
      "state": "CLOSED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The draft currently sets at least directionally that there can be different types of status lists that convey different kinds of statuses (e.g revocation vs a more complex suspended/active/inactive status setup), w.r.t I think we need to agree:\r\n\r\n1. We think this extensibility point is useful\r\n2. What the extensibility point should control e.g does it affect things like the number of bits allocated per index (so more than a binary state can be expressed)\r\n3. Does it control the type of URI the status list can be resolved from e.g MUST be an HTTPS url or is that controlled else where.",
      "createdAt": "2023-05-18T06:08:10Z",
      "updatedAt": "2023-06-15T13:44:01Z",
      "closedAt": "2023-06-15T13:44:01Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@c2bo and me were thinking on that. Our ideas were:\r\n- having the possibility that a status contains more than one bit is very useful and should be included. Otherwise multiple statuses for one token (e.g. revocation and suspension) requires two status lists, this means additional calls, potential syncing issues etc. this is a shortcoming of the StatusList2021\r\n- the spec should serve a predefined template for the most common usecases, e.g. simple revocation with 1 bit and maybe one more template with revocation and suspension\r\n- in other cases the statusList should either include the definition in its metadata and/or point to a issuer-controlled URL that explains the status bits\r\n\r\nOur proposal was:\r\n```\r\n{\r\n    \"iss\": \"https://example.org/\" //MUST\r\n    \"iat\": 1683560915, //MUST\r\n    \"exp\": 1686232115, //MAY -> this allows issuer to defined a TTL\r\n    // this part probably needs to change\r\n    \"def\": { // optional: could be left out if pre-defined type\r\n        \"bits\": 2, //MUST\r\n        \"state_definitions_uri\":, //CONDITIONAL: uri to explanations\r\n        \"state_definitions\" { //CONDITIONAL: explanations inline\r\n            \"0\" : \"VALID\",\r\n            \"1\" : \"SUSPENDED\",\r\n            \"2\" : \"REVOKED\",\r\n            \"3\" : \"UNDEFINED\" //or absent\r\n        }\r\n    }\r\n    \"encoded_status\" : \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA\"\r\n}\r\n```\r\nIn this example `state_definitions_uri` could point to a tempalte from this spec",
          "createdAt": "2023-05-19T12:22:14Z",
          "updatedAt": "2023-05-19T12:22:14Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I do believe we have to give some pre-defined interpretations - parsing the different states doesn't really work well for fully automated flows imho. Biggest question then would be if just mentioning that template via name would be enough or if we still want to have that information served in the status list as well.\r\n\r\nIf we take revocation as an example, then we likely need to define at least 2 default templates similar to these:\r\n- 1bit-revocation:\r\n where 0 equals `VALID` and 1 equals `REVOKED`\r\n- 2bit-revocation: \r\n 0 = `VALID`\r\n 1 = `REVOKED`\r\n 2 = `SUSPENDED`\r\n 3 = ..\r\n\r\nWe could then either have that definition as part of the JWT or just reference via name/uri (which I would prefer - makes implementation a lot easier). ",
          "createdAt": "2023-05-19T12:57:59Z",
          "updatedAt": "2023-05-19T12:57:59Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Our proposal was:\r\n\r\nThanks this is great to be able to review!  IMO the simplest possible conveyance about what statues a list can represent I believe can be done through the sts.typ alone. Because I think majority of implementations will require explicit handling of different status types rather than supporting generic statuses. For example as an implementation if I were to come across a JWT with a sts.typ value set to \"revocation-list\" it would mean each status entry in the list is represented by 1bit where when the bit is set to 0 it represents NOT REVOKED status and when the bit is set to 1 it represents REVOKED.",
          "createdAt": "2023-05-21T21:17:12Z",
          "updatedAt": "2023-05-21T21:17:12Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is addressed by #17, @tplooker please close this issue",
          "createdAt": "2023-06-15T09:40:07Z",
          "updatedAt": "2023-06-15T09:40:36Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "I_kwDOJZ2aqs5mOaOs",
      "title": "Document validation procedure",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/2",
      "state": "OPEN",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need to document end to end the validation procedure for a JWT and CWT referencing a status list including resolution of the status list, validation of the status list and how to get the status information for the JWT referencing the status list.",
      "createdAt": "2023-05-18T06:09:52Z",
      "updatedAt": "2023-05-18T06:09:52Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 3,
      "id": "I_kwDOJZ2aqs5mOaZC",
      "title": "Document the CWT variation of the status list",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/3",
      "state": "OPEN",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As described in the title, detail the CWT representation of the status list which is complementary to the JWT representation.",
      "createdAt": "2023-05-18T06:10:35Z",
      "updatedAt": "2023-06-26T21:31:52Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "Maybe a naive question but what's the motivation for this draft having the two representations? When positioned\r\nas a companion of the SD-JWT VC draft and aiming for the OAuth WG, it seems like keeping the scope tighter and only having the JWT representation would be sufficient/okay/preferable.  \r\n",
          "createdAt": "2023-06-26T21:31:52Z",
          "updatedAt": "2023-06-26T21:31:52Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOJZ2aqs5mOa7a",
      "title": "Add a privacy consideration around suggested list sizes for heard privacy",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/4",
      "state": "OPEN",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As described in the title the size of the list (number of token statuses represented by the list) will have a significant impact on privacy related applications.",
      "createdAt": "2023-05-18T06:12:50Z",
      "updatedAt": "2023-05-26T12:45:49Z",
      "closedAt": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I see this is related to #12 ",
          "createdAt": "2023-05-23T15:41:36Z",
          "updatedAt": "2023-05-23T15:41:36Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Should we define a minimum size or give this as a recommendation in privacy recommendation?",
          "createdAt": "2023-05-23T20:07:02Z",
          "updatedAt": "2023-05-23T20:07:02Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "use SHOULD for minimum size 16K",
          "createdAt": "2023-05-26T12:45:49Z",
          "updatedAt": "2023-05-26T12:45:49Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOJZ2aqs5mWe-e",
      "title": "Add the size of the statusList as a property",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/5",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It could be handy to include the size of the statusList, i.e. the total number of entities and there status.\r\nThis could serve as an additional check that the statusList was correctly uncompressed and decoded by the verifier, especially if we think about including variable size of bits per status, see #1 \r\nProposed change to the current draft:\r\n```\r\n{\r\n  \"alg\": \"ES256\",\r\n  \"kid\": \"11\"\r\n}\r\n.\r\n{\r\n  \"iss\": \"https://example.com\",\r\n  \"iat\": 1683560915,\r\n  \"exp\": 1686232115,\r\n  \"sts_lst\": {\r\n    \"typ\": \"revocation-list\",\r\n    \"size\": 16384,\r\n    \"lst\": \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAA......IC3AYbSVKsAQAAA\"\r\n  }\r\n}\r\n```",
      "createdAt": "2023-05-19T12:27:52Z",
      "updatedAt": "2023-05-22T20:31:38Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Just so I understand better @paulbastian is your concern that developers would struggle to decode the status list reliably and that size would assist in validating this was done correctly? Because if so I think test vectors would probably assist in this regard. If its about corruption of the list it self I dont think that is of material concern because the list is always signed. R.e multi bits per status what would size convey in this context the number of bits/bytes or statuses represented?",
          "createdAt": "2023-05-21T20:53:20Z",
          "updatedAt": "2023-05-21T20:53:20Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Exactly, integrity is protected by the signature, but uncompressing and getting the correct index needs to be done correctly. I agree we should add text vectors to the spec, let's open an issue on that.\nIn my opinion size = total bits uncompressed / bits per status = number of entities covered by the status list.\nDo you agree?",
          "createdAt": "2023-05-21T20:56:10Z",
          "updatedAt": "2023-05-21T20:57:45Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Does it make sense to introduce\r\n`size` = amount of entries \r\n`states` = possible states that an entry can have (e.g., 2 for standard revocation)\r\nas mandatory values to the status list? That would allow for an easy check if interpretation/conversion of the status list worked properly on the verifier side.\r\n\r\n\r\nWould result in something like this:\r\n```\r\n{\r\n  \"iss\": \"https://example.com\",\r\n  \"iat\": 1683560915,\r\n  \"exp\": 1686232115,\r\n  \"status\": {\r\n    \"typ\": \"revocation-list\",\r\n    \"size\": 16384,\r\n    \"states\": 2,\r\n    \"lst\": \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAA......IC3AYbSVKsAQAAA\"\r\n  }\r\n}\r\n```",
          "createdAt": "2023-05-22T08:58:11Z",
          "updatedAt": "2023-05-22T08:58:11Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker are you arguing that it is not necessary at all? While I agree that you could get additional safety of correct deciding through test vectors, I think it is anyway a useful metadata to have and does not take large amounts of space.",
          "createdAt": "2023-05-22T20:31:38Z",
          "updatedAt": "2023-05-22T20:31:38Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOJZ2aqs5mW5EE",
      "title": "Optional authorization towards the statusList endpoint",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/7",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "To limit the tracking/profiling possiblities of the statusList, an optional mechanism for verifiers to get authorized access could be implemented. This limits the entities that have access to the status list. A mechanism could be:\r\n- not defined in this spec but added to privacy considerations\r\n- defined in this spec",
      "createdAt": "2023-05-19T13:44:53Z",
      "updatedAt": "2023-05-26T12:43:11Z",
      "closedAt": null,
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think it is a good idea to at least desribe the different scenarios of who (verifier/holder) is requesting the status list and how it is protected.",
          "createdAt": "2023-05-19T18:59:54Z",
          "updatedAt": "2023-05-19T18:59:54Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, one question this raises for me is whether there needs to be any information in the status entry of the issued credential that convey's this constraint to a verifying party (e.g the status list is access controlled and you need to do X to be able to resolve it?)",
          "createdAt": "2023-05-21T20:49:28Z",
          "updatedAt": "2023-05-21T20:49:28Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Either as an entry in the issued credential or we need to provide some form of meta information online prior to requesting the status list?",
          "createdAt": "2023-05-22T08:37:05Z",
          "updatedAt": "2023-05-22T08:37:05Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Main spec should have a short discussion why/where this would make sense.\r\nIn-depth discussion can happen in an appendix.",
          "createdAt": "2023-05-26T12:43:11Z",
          "updatedAt": "2023-05-26T12:43:11Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOJZ2aqs5ma42d",
      "title": "STS acronym",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/9",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In the OAuth2 ecosystem we have already the acronym STS, as Security Token Service, as defined in Token Exchange RFC 8693\r\n\r\nwhy not simply `status`?",
      "createdAt": "2023-05-21T00:07:19Z",
      "updatedAt": "2023-05-23T19:04:15Z",
      "closedAt": "2023-05-23T19:04:15Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for flagging, yes we can consider this,  I was trying to align to the informal convention JWT's typically use for root level claims which are strings with 3 characters.",
          "createdAt": "2023-05-21T20:47:42Z",
          "updatedAt": "2023-05-21T20:47:42Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I love this sensibility, even if from years at this part this convention is not respected anymore\r\n\r\n`sta` is weird\r\n`stat` is something good even if outside the three chars, at the same time it may be misleading since stat may point also to statistics\r\n\r\nwho knows if `status` besides being explicit represents the best compromise after all",
          "createdAt": "2023-05-21T21:10:50Z",
          "updatedAt": "2023-05-21T21:10:50Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, status feels like the most sensible compromise, I will prepare a PR that makes this change.",
          "createdAt": "2023-05-21T22:18:36Z",
          "updatedAt": "2023-05-21T22:18:36Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed, please also adopt this for the status_list",
          "createdAt": "2023-05-22T21:03:28Z",
          "updatedAt": "2023-05-22T21:03:28Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Close with #16 ?",
          "createdAt": "2023-05-23T15:40:43Z",
          "updatedAt": "2023-05-23T15:40:43Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, closing.",
          "createdAt": "2023-05-23T19:04:15Z",
          "updatedAt": "2023-05-23T19:04:15Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOJZ2aqs5ma5F5",
      "title": "Ownership of the status endpoint and third party status list providers use case",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/10",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "we assume (and that's good) that the issuer of a VC is responsible of its lifecycle, and then it has to maintain the revocation status of its issued vcs.\r\n\r\nthere may be some cases where the revocation list could be deployed outside the issuer domain\r\n\r\nin this case the status JSON Object shouln't be a JWS instead, signed by the owner of the status list (different from the isser)? \r\n\r\n````\r\n  \"sts\": $JWS\r\n````  ",
      "createdAt": "2023-05-21T00:11:48Z",
      "updatedAt": "2023-05-22T21:06:56Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "@peppelinux 3rd party distribution of the status list (e.g it being hosted by someone other than the issuer) I think is a good usecase to elaborate on, however regardless of host I think it is important that the list is always signed by the issuer.",
          "createdAt": "2023-05-21T20:46:25Z",
          "updatedAt": "2023-05-21T20:46:25Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I prefer a decentralized approach, where each issuer manages the lifecycle of its issuance but there comes other models where revocation must or may be hosted to third parties \r\n\r\nso we should give a verifiable attestation of the status provider, and this attestation must be verifiable\r\n\r\nthis brings again the aspect to have this status object directly as a JWS for both cases but I'd prefer a plantext json is the issuer is the same, just because it is simple and the hope that there won't be centralized approaches\r\n\r\ndifferently, if the issuer is not the same and the status object should be a JWS, well in it we should have a verifiable trust (x5c, trust_chain ...) embedded or referenced in it -> payload increase but necessary ",
          "createdAt": "2023-05-21T21:15:51Z",
          "updatedAt": "2023-05-21T21:15:51Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "@peppelinux so If I understand you correctly you would like to support a model where the statuse being conveyed about a JWT is by someone other than the issuer of the JWT?",
          "createdAt": "2023-05-21T22:17:24Z",
          "updatedAt": "2023-05-21T22:17:24Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I dont like It but there May be some cases when It Is required\r\n\r\nNot in my implementations :-)",
          "createdAt": "2023-05-22T06:37:38Z",
          "updatedAt": "2023-05-22T06:37:38Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I have this use case also in mind, I parked this concept in the privacy considerations part 5.5 as hosting service. It's an easy way to get additional privacy because the issuer can not track who accessed the status list",
          "createdAt": "2023-05-22T21:06:55Z",
          "updatedAt": "2023-05-22T21:06:55Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOJZ2aqs5ma5Qn",
      "title": "idx is a counter then a information leaker",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/11",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Since idx is a positive integer number, it is assumed that its numbering is given by a counter\r\nby guessing all the positive number greater than zero, an adversary would know how many credential a credential issuer has issued\r\n\r\nwould it be better using an exadecimal and opaque uid instead of a number?",
      "createdAt": "2023-05-21T00:14:59Z",
      "updatedAt": "2023-05-23T19:08:54Z",
      "closedAt": "2023-05-23T19:08:54Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "@peppelinux, an adversary looking at a status list only knows the maximum number of *possible* statuses that a list conveys, it cannot detect how many credentials have been issued by looking at the status list alone because issuers typically pre-allocate the list ahead of assigning a credential specific index in the list. Issuers can also employ certain noise techniques if they so choose by having \"dead entries\" in the list that are never assigned a credential.",
          "createdAt": "2023-05-21T20:44:08Z",
          "updatedAt": "2023-05-21T20:44:08Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "it seems the answer that closes this issue\r\n\r\nbefore doing that, and as an editorial strategy, I suggest to place your comment, even in a raw way, in the privacy consideration of the specs\r\n\r\nthat would take track of the FAQ directly in the specs",
          "createdAt": "2023-05-21T21:17:53Z",
          "updatedAt": "2023-05-21T21:17:53Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree. This probably belongs to the section 5.3 correlation risks and tracking as a counter measure\n\n",
          "createdAt": "2023-05-22T21:12:20Z",
          "updatedAt": "2023-05-22T21:12:20Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Close with #15 ?",
          "createdAt": "2023-05-23T15:35:22Z",
          "updatedAt": "2023-05-23T15:35:22Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, closing.",
          "createdAt": "2023-05-23T19:08:54Z",
          "updatedAt": "2023-05-23T19:08:54Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOJZ2aqs5mpyJ8",
      "title": "Define Minimum Size",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/12",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Define a minimum size or give this as a recommendation in privacy recommendation?",
      "createdAt": "2023-05-23T14:42:54Z",
      "updatedAt": "2023-05-23T20:06:49Z",
      "closedAt": "2023-05-23T20:06:49Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Would suggest we closed in favour of #4?",
          "createdAt": "2023-05-23T19:05:18Z",
          "updatedAt": "2023-05-23T19:05:18Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOJZ2aqs5mqEtA",
      "title": "Add Terminology and rephrase the Token",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/13",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We need a common and better name for the first JWT aka Token aka StatusListEntry.\r\nMy proposal would be:\r\n- Subject Token\r\n- **Subject JWT**\r\n- Status Holding JWT",
      "createdAt": "2023-05-23T15:24:35Z",
      "updatedAt": "2023-06-15T09:39:36Z",
      "closedAt": "2023-06-15T09:39:36Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes I had a similar thought, I agree with Subject JWT.",
          "createdAt": "2023-05-25T04:15:33Z",
          "updatedAt": "2023-05-25T04:15:33Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I discussed with @c2bo that the spec is supposed to work for JWT and CWT, so maybe Subject Token might fit better?",
          "createdAt": "2023-05-26T12:36:03Z",
          "updatedAt": "2023-05-26T12:36:03Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressing these issues in #20 ",
          "createdAt": "2023-05-30T14:44:53Z",
          "updatedAt": "2023-05-30T14:44:53Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOJZ2aqs5mqGA5",
      "title": "Remove typ from Token status data",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/14",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The current proposal for the JWT having a status is:\r\n```\r\n{\r\n  \"alg\": \"ES256\",\r\n  \"kid\": \"11\"\r\n}\r\n.\r\n{\r\n  \"iss\": \"https://example.com\",\r\n  \"sts\": {\r\n    \"typ\": \"revocation-list\",\r\n    \"idx\": 0,\r\n    \"uri\": \"https://example.com/statuslists/1\"\r\n  }\r\n}\r\n```\r\nIn my opinion the `typ`claim here is absolete.\r\nThe type of the status list should be known from the `typ`claim in the Status List JWT.\r\nHow to fetch the Status List JWT is given by the specification or by the scheme in `uri`.",
      "createdAt": "2023-05-23T15:27:34Z",
      "updatedAt": "2023-06-15T09:41:14Z",
      "closedAt": "2023-06-15T09:41:13Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also remove the phrase \"The value MUST be equal to that of the \"typ\" attribute in the \"sts\" claim for the token who's status is being validated\" as this is obsolete in this case as well",
          "createdAt": "2023-05-23T15:49:13Z",
          "updatedAt": "2023-05-23T15:49:13Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Im not against this proposed simplification however removing it would prevent an extensibility point based of the 'typ' value to control what types of uri could be found in the URI e.g are these always https? or are other schemes supported?",
          "createdAt": "2023-05-25T04:14:48Z",
          "updatedAt": "2023-05-25T04:14:48Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Other schemes could be supported using a different prefix in the `uri` field: the uri could for example be a DID path like did:example:123/status.\r\nI don't think we should worry about that too much for the time being.",
          "createdAt": "2023-05-25T12:00:23Z",
          "updatedAt": "2023-05-25T12:00:23Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree with @c2bo . The scheme is probably enough. I would suggest making HTTPS schemes a MUST requirement and other schemes MAY be used",
          "createdAt": "2023-05-25T20:45:50Z",
          "updatedAt": "2023-05-25T20:45:50Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is addressed by #17 ",
          "createdAt": "2023-06-15T09:41:13Z",
          "updatedAt": "2023-06-15T09:41:13Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOJZ2aqs5nFDxy",
      "title": "Draft structure and section order",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/19",
      "state": "OPEN",
      "author": "tlodderstedt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I did a first review of this draft. As a newbie to the topic, I found the following issues:\r\n\r\n- I miss a description of the fundamental concept, i.e. the status list itself is a JWT (issued by the same issuer issuing the JWTs), the status list JWT is obtained from a URL hosted by that issuer or another party, the link between the JWT and its status list is provided through data in the JWT. I suggest to add this in the Introduction (or an Overview) section. \r\n- When reading Section 3.1. for the first time I was confused whether it describes the status list JWT or the JWT referring to the status list. I think it is the latter and it should be clear to the reader on first sight. \r\n- I  think the order of definition should be changed. Right now, I'm supposed to understand how a status list JWT is used in a JWT without even knowing what that status list JWT is. I suggest to change order: 1) Overview of the concepts, 2) specify status list JWT (structure and where/how to obtain), 3) embedding in a JWT (syntax, processing rules, ...). ",
      "createdAt": "2023-05-28T10:28:05Z",
      "updatedAt": "2023-05-30T14:44:29Z",
      "closedAt": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agree on 1+2. As mentioned in #13 we need a better word describing the \"Token\" that is being described by the status List. I will make a PR using \"Subject Token\" as this comprises both JSON and CBOR formats.\r\nAgree on 3 as well.",
          "createdAt": "2023-05-30T08:34:12Z",
          "updatedAt": "2023-05-30T08:34:12Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "For reordering it would make sense to get forward with the existing PRs first and do it afterwards..",
          "createdAt": "2023-05-30T08:35:43Z",
          "updatedAt": "2023-05-30T08:35:43Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressing some of these issues in #20 ",
          "createdAt": "2023-05-30T14:44:28Z",
          "updatedAt": "2023-05-30T14:44:28Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOJZ2aqs5oC0TD",
      "title": "Title / Future Proofness for other formats than bitarrays",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/21",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I'm wondering whether\r\na) this document shall always only be about status list using bitarrays/bitstrings\r\nor\r\nb) we want to leave a window open to enable other forms of storage\r\n\r\nIn case of a) it could make sense to name bit array in the title of the document.\r\nIn case of b) it could make sense to add a field that reference the existing mechanism",
      "createdAt": "2023-06-07T10:23:03Z",
      "updatedAt": "2023-06-07T10:23:03Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOJZ2aqs5oGi-v",
      "title": "Add implementations consinderations",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/24",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add:\r\n- prevent double allocating an index\r\n- randomize allocation of indexes/avoid sequential usage",
      "createdAt": "2023-06-07T19:34:15Z",
      "updatedAt": "2023-06-07T19:34:15Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 25,
      "id": "I_kwDOJZ2aqs5ofMTN",
      "title": "JOSE typ for Status List Token",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/25",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "              > umm I thought we agreed to remove the concept of the \"typ\" attribute.. so no `revocation-list` and no `suspention-status-list`.\r\n\r\nBut I assume the Status List Token will have a `typ` JOSE header to properly distinguish it from other JWTs, right?\r\n\r\n_Originally posted by @tlodderstedt in https://github.com/vcstuff/draft-looker-jwt-cwt-status-list/issues/17#issuecomment-1584372077_\r\n            ",
      "createdAt": "2023-06-12T15:25:01Z",
      "updatedAt": "2023-06-13T18:05:25Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "my original comment should be removed from the description because I was referring to the `type` JWT claim. \r\nfor the purpose of this issue, simply put, a status list JWT should be typed per JWT BCP. and I would not expect any objections to that..",
          "createdAt": "2023-06-13T05:52:29Z",
          "updatedAt": "2023-06-13T05:52:29Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed, something like\r\n```\r\n{\r\n  \"typ\": \"statuslist+jwt\",\r\n  \"alg\": \"ES256\",\r\n  \"kid\": \"11\"\r\n}\r\n```\r\n?",
          "createdAt": "2023-06-13T09:45:22Z",
          "updatedAt": "2023-06-13T09:45:22Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "yes!",
          "createdAt": "2023-06-13T18:05:24Z",
          "updatedAt": "2023-06-13T18:05:24Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOJZ2aqs5oowGp",
      "title": "rename \"referenced token\" ",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/26",
      "state": "OPEN",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "remaining issue from PR #20. \r\n\r\nalternatives are \"referencing token\".",
      "createdAt": "2023-06-13T19:20:19Z",
      "updatedAt": "2023-06-16T09:49:06Z",
      "closedAt": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Right now the diagram is a little confusing,\r\nthe upper arrow could point in both directions saying \"References\" or \"Referencing\"",
          "createdAt": "2023-06-16T09:49:06Z",
          "updatedAt": "2023-06-16T09:49:06Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOJZ2aqs5ozHOP",
      "title": "Add suggestions for API for batch fetching statuslists",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/27",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If a verifier wants all statuslists for a specific type of Referenced Token, e.g. for offlien caching, then it would be handy, if the issuer provides a API endpoint to get those in one call, e.g. as an array.",
      "createdAt": "2023-06-15T07:39:24Z",
      "updatedAt": "2023-06-15T07:39:24Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 28,
      "id": "I_kwDOJZ2aqs5o0jOy",
      "title": "Include the uri in the Status List Token?",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/28",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If a verifier fetched the Status List Token and checked the status of the Referenced Token, he might want to store both of those, e.g. for archiving or regulative requirements.\r\nIF somebody were to review the data later, there is currently no guarantee that these matched together in the past, other than \u00ecss` is the same for both.\r\nI just thought about, if it makes sense to include the uri or some part of identifier in the Status List Token itself?",
      "createdAt": "2023-06-15T11:18:06Z",
      "updatedAt": "2023-06-17T06:24:33Z",
      "closedAt": "2023-06-17T06:24:32Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That is also missing for the offline case (bring your status list with you) to make sure we have the correct status list. \r\n\r\nImho, we can just use the subject claim and bind it to the URI that is also used in the Referenced Token? \r\nA status list JWT would then look like this:\r\n```\r\n{\r\n  \"sub\": \"https://example.com/statuslists/1\", \r\n  \"iss\": \"https://example.com\",\r\n  \"iat\": 1683560915,\r\n  \"exp\": 1686232115,\r\n  \"status_list\": {\r\n    \"bits\": 1,\r\n    \"lst\": \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAA......IC3AYbSVKsAQAAA\"\r\n  }\r\n}\r\n```\r\nWhat do you think?",
          "createdAt": "2023-06-15T11:33:50Z",
          "updatedAt": "2023-06-15T11:33:50Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "yes, this is what I thought. `sub` is probably the best choice",
          "createdAt": "2023-06-15T11:35:56Z",
          "updatedAt": "2023-06-15T11:35:56Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved in #30 ",
          "createdAt": "2023-06-17T06:24:32Z",
          "updatedAt": "2023-06-17T06:24:32Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "I_kwDOJZ2aqs5pKHrK",
      "title": "\"bits\" in \"status\" claim example seems not right",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/35",
      "state": "CLOSED",
      "author": "bc-pi",
      "authorAssociation": "NONE",
      "assignees": [
        "tplooker"
      ],
      "labels": [],
      "body": "The example of the \"Referenced Token\" content https://www.ietf.org/archive/id/draft-looker-oauth-jwt-cwt-status-list-00.html#section-4.1-3 has \"bits\" in the \"status\" claim but \"bits\" isn't defined for that claim https://www.ietf.org/archive/id/draft-looker-oauth-jwt-cwt-status-list-00.html#name-status-claim-format \r\n\r\nIt seems like \"bits\" is only for \"status_list\" claim (where it's defined https://www.ietf.org/archive/id/draft-looker-oauth-jwt-cwt-status-list-00.html#name-status-list-claim-format ) and should be removed from the aforementioned example. \r\n",
      "createdAt": "2023-06-19T21:43:52Z",
      "updatedAt": "2023-06-21T06:20:11Z",
      "closedAt": "2023-06-21T06:20:11Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for your review!\r\nThis seems correct from my view :+1: ",
          "createdAt": "2023-06-20T13:25:01Z",
          "updatedAt": "2023-06-20T13:25:01Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolution is to remove the \"bit\" field/attribute from the \"status\" claim in reference token example and instead only have it in the status list.",
          "createdAt": "2023-06-21T06:08:57Z",
          "updatedAt": "2023-06-21T06:08:57Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 6,
      "id": "PR_kwDOJZ2aqs5Q5MSP",
      "title": "fix broken links",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/6",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixing links to point to new org",
      "createdAt": "2023-05-19T13:40:13Z",
      "updatedAt": "2023-05-19T19:27:44Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "05f0630a52d47d8f9ca09629cf93c0eefe128016",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "fix/links",
      "headRefOid": "bffa41854f0ea7f669fa3940a776240ede0279bc",
      "closedAt": "2023-05-19T19:27:44Z",
      "mergedAt": "2023-05-19T19:27:44Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "8fd1578c37e3077c753f9f571e5d9d99e18ed7d8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5ViCuh",
          "commit": {
            "abbreviatedOid": "bffa418"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-19T19:27:39Z",
          "updatedAt": "2023-05-19T19:27:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOJZ2aqs5Q6BHV",
      "title": "Drafting Privacy and Security Considerations",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/8",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "gathering some ideas on privacy and security considerations",
      "createdAt": "2023-05-19T16:23:43Z",
      "updatedAt": "2023-05-21T20:40:47Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "05f0630a52d47d8f9ca09629cf93c0eefe128016",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "main",
      "headRefOid": "d6e597910b4aeb1c7076738bf8b9abdde84f169d",
      "closedAt": "2023-05-21T20:40:47Z",
      "mergedAt": "2023-05-21T20:40:47Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "1de1ae351567921de967dd8d042725d7766b8245"
      },
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Looking good @paulbastian you should be able to run 'make fix-lint' locally to fix the whitespace issues",
          "createdAt": "2023-05-19T19:29:35Z",
          "updatedAt": "2023-05-19T19:29:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5Vh9ZL",
          "commit": {
            "abbreviatedOid": "9b46a5a"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Need to remove the trailing whitespaces for the markdown tooling to be happy",
          "createdAt": "2023-05-19T19:12:53Z",
          "updatedAt": "2023-05-19T19:13:53Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nTODO elaborate on issuers avoiding sequential usage of indices and status lists\r\n```",
              "createdAt": "2023-05-19T19:12:53Z",
              "updatedAt": "2023-05-19T19:13:53Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n## Herd Privacy\r\n```",
              "createdAt": "2023-05-19T19:13:02Z",
              "updatedAt": "2023-05-19T19:13:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOJZ2aqs5RKPbK",
      "title": "add privacy consideration on issuers mechanisms to obfuscate actual u\u2026",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/15",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026sage",
      "createdAt": "2023-05-23T15:34:58Z",
      "updatedAt": "2023-05-23T19:02:27Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "1de1ae351567921de967dd8d042725d7766b8245",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "privacy",
      "headRefOid": "699ab02ce71124983448f1c97cf72ddb753b23ce",
      "closedAt": "2023-05-23T19:02:27Z",
      "mergedAt": "2023-05-23T19:02:27Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "911f25837d219ac5f6f0e9a7fc5fb0f6f49762e9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5V2psY",
          "commit": {
            "abbreviatedOid": "699ab02"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-23T19:02:19Z",
          "updatedAt": "2023-05-23T19:02:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOJZ2aqs5RKRQC",
      "title": "rename sts and sts_lst",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/16",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-23T15:40:16Z",
      "updatedAt": "2023-05-23T19:03:51Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "1de1ae351567921de967dd8d042725d7766b8245",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "bikeshedding",
      "headRefOid": "6703e13f2240695b3cda07904aa5a934fa7ed161",
      "closedAt": "2023-05-23T19:03:51Z",
      "mergedAt": "2023-05-23T19:03:50Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "b90e150d6df05231298d446619924a1bfb5ad94e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5V2qND",
          "commit": {
            "abbreviatedOid": "6703e13"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-23T19:03:40Z",
          "updatedAt": "2023-05-23T19:03:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOJZ2aqs5RKpwh",
      "title": "draft for status types and defintiions",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/17",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-23T16:45:15Z",
      "updatedAt": "2023-06-15T07:06:51Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "97d29248904ebb29c899d094066f74d21aecfb04",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "types",
      "headRefOid": "64c70917a1f10b0576c2c8e525f5f914822d658a",
      "closedAt": "2023-06-15T07:06:51Z",
      "mergedAt": "2023-06-15T07:06:50Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "052948599ca836550d5469d89b7a434a494a3a5c"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Micha proposed to change REVOKED to INVALID, as it gives less intention whether this is a permanent state and the issuers could reflect a suspension also with a 1bit size status list as well",
          "createdAt": "2023-05-24T10:42:32Z",
          "updatedAt": "2023-05-24T10:42:32Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm in agreement with Kristina, the more I look at this the more I think we should have one possible enumeration of statuses rather than allowing every issuer to define their own, the question then becomes how big that set needs to be as it controls how many bits are allocated to each credential in the status list.",
          "createdAt": "2023-06-06T20:51:34Z",
          "updatedAt": "2023-06-06T20:51:34Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm fine with defining the first bit as valid/invalid. I think providing the option for additional bits offers benefits with acceptable tradeoffs",
          "createdAt": "2023-06-07T05:29:03Z",
          "updatedAt": "2023-06-07T05:29:03Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've made some changes, please recheck @tplooker @Sakurann ",
          "createdAt": "2023-06-07T12:18:45Z",
          "updatedAt": "2023-06-07T12:18:45Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "umm I thought we agreed to remove the concept of the \"typ\" attribute.. so no `revocation-list` and no `suspention-status-list`.\r\n",
          "createdAt": "2023-06-09T06:38:59Z",
          "updatedAt": "2023-06-09T06:38:59Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah that was captured here @Sakurann https://github.com/vcstuff/draft-looker-jwt-cwt-status-list/pull/20#issuecomment-1581385983",
          "createdAt": "2023-06-09T09:04:41Z",
          "updatedAt": "2023-06-09T09:04:41Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> umm I thought we agreed to remove the concept of the \"typ\" attribute.. so no `revocation-list` and no `suspention-status-list`.\r\n\r\nBut I assume the Status List Token will have a `typ` JOSE header to properly distinguish it from other JWTs, right?",
          "createdAt": "2023-06-09T10:43:55Z",
          "updatedAt": "2023-06-09T10:43:55Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > umm I thought we agreed to remove the concept of the \"typ\" attribute.. so no `revocation-list` and no `suspention-status-list`.\r\n> \r\n> But I assume the Status List Token will have a `typ` JOSE header to properly distinguish it from other JWTs, right?\r\n\r\nI approve, but moved to separate issue",
          "createdAt": "2023-06-12T15:25:44Z",
          "updatedAt": "2023-06-12T15:25:44Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tlodderstedt typo on my end. yes, JWT should be typed (`typ` claim present), the current spec also introduces a `type` body claim as far as I can see, which is what I am not in agreement with.",
          "createdAt": "2023-06-13T05:49:57Z",
          "updatedAt": "2023-06-13T05:49:57Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker I am confused. so the idea is to merge this PR and then remove the \"type\" JWT claim in PR #20?",
          "createdAt": "2023-06-13T05:50:33Z",
          "updatedAt": "2023-06-13T05:50:33Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "comment edited, I got confused here as well.\r\nThere is an issue open already as a task and I would like to not blow up the PRs too much",
          "createdAt": "2023-06-13T05:52:15Z",
          "updatedAt": "2023-06-13T09:46:58Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker ready for merge",
          "createdAt": "2023-06-14T21:45:54Z",
          "updatedAt": "2023-06-14T21:45:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5XVFf1",
          "commit": {
            "abbreviatedOid": "562b19e"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-06T12:58:26Z",
          "updatedAt": "2023-06-06T12:58:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYOI3",
          "commit": {
            "abbreviatedOid": "562b19e"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "sorry, I am not onboard with giving the issuers the complete freedom to define their own status values. for the interop purposes, the valid and invalid values MUST always be the same. ie 0 is always valid and 1 is always invalid. (or vice versa - that I do not care). so when the bit size is bigger than 2, the first bite is always valid/invalid and from the second bit, it can be suspended, etc.",
          "createdAt": "2023-06-06T19:53:34Z",
          "updatedAt": "2023-06-06T19:53:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5V20ho",
          "commit": {
            "abbreviatedOid": "d8d7d57"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-23T19:33:12Z",
          "updatedAt": "2023-06-12T15:22:00Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Should we also call this VALID?",
              "createdAt": "2023-05-23T19:33:13Z",
              "updatedAt": "2023-06-12T15:22:00Z"
            },
            {
              "originalPosition": 67,
              "body": "Imho, we should change this to 0 -> valid, 1-> revoked, 2 -> suspended. That way it is a clear extension to the 1bit one",
              "createdAt": "2023-05-23T19:34:22Z",
              "updatedAt": "2023-06-12T15:22:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YFskQ",
          "commit": {
            "abbreviatedOid": "9d7ae60"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T19:09:08Z",
          "updatedAt": "2023-06-13T19:09:08Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n2. The claim value object MUST contain an \"idx\" (index) attribute with a numeric based value that represents the index to check for status information in the status list for the current JWT. The value of this attribute MUST be a non-negative number, containing a value of zero or greater. Refer to xx for details on the validation procedure.\r\n```",
              "createdAt": "2023-06-13T19:09:08Z",
              "updatedAt": "2023-06-13T19:09:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YFs5s",
          "commit": {
            "abbreviatedOid": "9d7ae60"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I am a little confused with calling \"VALID\", \"INVALID\" Status List `type`, but agreed this should be merged",
          "createdAt": "2023-06-13T19:10:07Z",
          "updatedAt": "2023-06-13T19:10:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YFtDI",
          "commit": {
            "abbreviatedOid": "9d7ae60"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "One minor typo",
          "createdAt": "2023-06-13T19:10:37Z",
          "updatedAt": "2023-06-13T19:10:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOJZ2aqs5RVzIX",
      "title": "First iteration for the encoding ",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/18",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Questions for the encoding:\r\n- base64 vs url-safe base64\r\n- bitwise encoding right now is least significant bit to most significant bit\r\n\r\nThe part describing the bit-encoding still needs be rewritten\r\n\r\nIn general:\r\nI searched a bit for better ways to encode/compress but in terms of simplicity and support for different programming languages, it seems some form of byte array and gZIP seem to be a pretty decent pick.",
      "createdAt": "2023-05-25T12:34:58Z",
      "updatedAt": "2023-06-15T13:43:30Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "052948599ca836550d5469d89b7a434a494a3a5c",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "feature/encoding",
      "headRefOid": "a6ef3d720e3fd4c299d06cfa6c9dd293b2bb4011",
      "closedAt": "2023-06-15T13:43:29Z",
      "mergedAt": "2023-06-15T13:43:29Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've made a first implementation in Kotlin today.\r\nTo me, it feels very natural to count Byte indexes up from 0 to size(whether this is left to right or right to left feels a little philosophical) and Bit indexes from right to left.",
          "createdAt": "2023-06-13T15:11:18Z",
          "updatedAt": "2023-06-13T15:11:18Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Imho we need another iteration on the description of the bit encoding, most likely with some form of ASCII art. I would prefer to do that in another PR- what do you think?",
          "createdAt": "2023-06-15T11:48:26Z",
          "updatedAt": "2023-06-15T11:48:26Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5WJmCj",
          "commit": {
            "abbreviatedOid": "13e1d2f"
          },
          "author": "MichScha",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-26T07:12:24Z",
          "updatedAt": "2023-05-26T07:12:25Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Better understanding by adding the possible states of a status with number of bits\r\nExample of a byte representing 4  statuses (2 bit possible values each) with indices 0,1,2,3:",
              "createdAt": "2023-05-26T07:12:24Z",
              "updatedAt": "2023-05-26T07:12:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WiXZM",
          "commit": {
            "abbreviatedOid": "453c427"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T21:30:25Z",
          "updatedAt": "2023-05-30T21:30:25Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "If #20 is merged ahead will need to update this PR with the required language alignment e.g credential -> subject token",
              "createdAt": "2023-05-30T21:30:25Z",
              "updatedAt": "2023-05-30T21:30:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WwLKL",
          "commit": {
            "abbreviatedOid": "453c427"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-01T13:22:49Z",
          "updatedAt": "2023-06-01T13:22:50Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nEach status of a credential MUST be represented with a bit size of 1,2,4, or 8. Therefore up to 2,4,16, or 256 statuses for a credential depending on the bit-size are possible. This limitation was introduced to reduce the amount of bit manipulation necessary to one byte for every operation and thus keeping implementations simpler and less error prone.\r\n```",
              "createdAt": "2023-06-01T13:22:49Z",
              "updatedAt": "2023-06-01T13:22:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YMdhX",
          "commit": {
            "abbreviatedOid": "7bdf31d"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-14T14:48:32Z",
          "updatedAt": "2023-06-14T15:59:23Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nEach status of a Referenced Token MUST be represented with a bit size of 1,2,4, or 8. Therefore up to 2,4,16, or 256 statuses for a Referenced Token, depending on the bit-size, are possible. This limitation is intended to limit bit manipulation necessary to a single byte for every operation and thus keeping implementations simpler and less error prone.\r\n```",
              "createdAt": "2023-06-14T14:48:32Z",
              "updatedAt": "2023-06-14T15:59:23Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n1. The overall status list is encoded as a byte array. Depending on the \"bit-size\" each byte corresponds to 8/(#bit-size) statuses (8,4,2, or 1). The status of each Referenced Token is identified using an index that maps to a specific bits within the byte array. The index starts counting at 0 and ends with \"size\" - 1(being the last valid entry). The bits within an array are counted from least significant bit \"0\" to the most significant bit (\"7\"). All bits of the byte array at a particular index are set to a status value.\r\n```",
              "createdAt": "2023-06-14T15:55:35Z",
              "updatedAt": "2023-06-14T15:59:23Z"
            },
            {
              "originalPosition": 23,
              "body": "I would favor Base64 instead of Base64 URL as I think library support should be better and we do not intend to send the byte array over an URL",
              "createdAt": "2023-06-14T15:56:23Z",
              "updatedAt": "2023-06-14T15:59:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YOTZl",
          "commit": {
            "abbreviatedOid": "7bdf31d"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T19:18:59Z",
          "updatedAt": "2023-06-14T19:19:00Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "That was one of the points I wasn't 100% sure about. Url-safe encoding is a tiny bit smaller (= padding) but so far i don't think we would ever convey the status list in some form of URL. \r\nOverall I agree, let's start with base64 for better support and figure out if there are reasons we are not aware of yet to switch to another representaion.",
              "createdAt": "2023-06-14T19:18:59Z",
              "updatedAt": "2023-06-14T21:41:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YPEg5",
          "commit": {
            "abbreviatedOid": "34d588a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T21:38:21Z",
          "updatedAt": "2023-06-14T21:38:21Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "this is missing the encoded list",
              "createdAt": "2023-06-14T21:38:21Z",
              "updatedAt": "2023-06-14T21:38:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YPE6m",
          "commit": {
            "abbreviatedOid": "7bdf31d"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T21:40:02Z",
          "updatedAt": "2023-06-14T21:40:02Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I refrain from my point after speaking with Micha Kraus. He mentioned that JWT is using Ba64URL for encoding anyway, as the Token uses JWT as a wrapper, it makes sense to use the same encoding!",
              "createdAt": "2023-06-14T21:40:02Z",
              "updatedAt": "2023-06-14T21:40:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YTNWr",
          "commit": {
            "abbreviatedOid": "453c427"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T12:17:19Z",
          "updatedAt": "2023-06-15T12:17:19Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Updated with referenced token by paul",
              "createdAt": "2023-06-15T12:17:19Z",
              "updatedAt": "2023-06-15T12:17:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YTNyn",
          "commit": {
            "abbreviatedOid": "34d588a"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T12:18:22Z",
          "updatedAt": "2023-06-15T12:18:23Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "The encoded list example was added in the last commit",
              "createdAt": "2023-06-15T12:18:22Z",
              "updatedAt": "2023-06-15T12:18:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YTr7e",
          "commit": {
            "abbreviatedOid": "6ac60aa"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-15T13:19:16Z",
          "updatedAt": "2023-06-15T13:19:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOJZ2aqs5RscE6",
      "title": "add introduction text, rename to Referenced Token",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/20",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-30T14:43:32Z",
      "updatedAt": "2023-06-14T20:06:49Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "b90e150d6df05231298d446619924a1bfb5ad94e",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "introduction",
      "headRefOid": "ee8111fea6d2ac617a68cc2c0497a309c8944bd6",
      "closedAt": "2023-06-14T20:06:49Z",
      "mergedAt": "2023-06-14T20:06:49Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "97d29248904ebb29c899d094066f74d21aecfb04"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker Whats' failing on the build here?",
          "createdAt": "2023-05-30T14:59:47Z",
          "updatedAt": "2023-05-30T14:59:47Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "`RFC-XXXX` breaks the build\r\nAll RFC references are resolved interally and linked",
          "createdAt": "2023-05-30T18:54:49Z",
          "updatedAt": "2023-05-30T18:54:49Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am sorry, I am completely lost with the idea of using a term subject token to say digital credential/verifiable credential. and the definition of a subject token does not really give a rationale why it is called subject token and only talks about relationship with the status list...\r\n\r\nThere are possible applications of this draft that go beyond just verifiable credentials, hence we do not want to use that term in this draft IMO. \"Token\" is already a term broadly used in this space e.g CWT and JWT both use it, \"subject\" was used in this context because it is also a term used heavily w.r.t tokens, feel free to suggest alternative terminology but at this point I think subject token is the best I've heard suggested.",
          "createdAt": "2023-06-06T20:54:30Z",
          "updatedAt": "2023-06-06T20:54:30Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "can we simply use JWT/CWT instead of creating any kind of abstraction term like `subject token`? One person i asked for feedback associated `subject token` with a token used to communicate a subject of an email.",
          "createdAt": "2023-06-06T21:04:54Z",
          "updatedAt": "2023-06-06T21:04:54Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "or, bottomline, please stick to `token`. `subject token` is very confusing.",
          "createdAt": "2023-06-07T00:04:14Z",
          "updatedAt": "2023-06-07T00:04:14Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm with Tobias on this and prefer introducing a new term here. Otherwise things get really weird because the status list is also a JWT/CWT and a token. We need something that clearly separated the status list token and the other token. I think subject token is the best we have. Also subject is leaving towards what we have as credentialSubject in the VC world, so the term subject is kind of established in this context",
          "createdAt": "2023-06-07T05:24:13Z",
          "updatedAt": "2023-06-07T05:25:46Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am really strongly against \"Subject Token\". Not only because it is not intuitive (I have been asking various people in this space and no one would associate what it trying to be conveyed), but we should not be introducing a new term in this already confusing ecosystem. \n\nMoreover, this status list mechanism can be used with a JWT/CWT that does not necessarily contain a subject (like SD-JWT-VC), so using a term subject because it is widely used is not a sufficient reason.\n\nKeep referring to it as a token, because this draft should not be opinionated about what is in the JWT/CWT whose status is being expressed should be fine, if a \"status list JWT/CWT\" is always referred as such. there are multiple occurrences where \"status list JWT\" is referred to simply as a JWT which should be fixed IMO.",
          "createdAt": "2023-06-07T05:53:43Z",
          "updatedAt": "2023-06-07T05:54:40Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We need clear terminology for:\r\n- the status list token (i think this one fits pretty well)\r\n- the credential / token that is bound to the status list\r\n\r\nI do believe only calling it token will cause confusion with the status list token. We can also call it something else like credential if we do a proper introduction of the term in the beginning?",
          "createdAt": "2023-06-07T13:50:49Z",
          "updatedAt": "2023-06-07T13:50:49Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Why call \"status list token\" and not \"status list JWT/CWT\"?",
          "createdAt": "2023-06-07T14:00:06Z",
          "updatedAt": "2023-06-07T14:00:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "agreed on call:\r\nrename Status List to Status List Token\r\nintroduce Status List for the actual bitarray\r\nrename Subject Token to Referenced Token\r\nremove Status List Provider for now and introduce it later if neccessary",
          "createdAt": "2023-06-07T19:27:12Z",
          "updatedAt": "2023-06-07T19:27:12Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "btw sd-jwt vc spec mentions status provider :)",
          "createdAt": "2023-06-09T06:55:07Z",
          "updatedAt": "2023-06-09T06:55:07Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tlodderstedt @Sakurann can you approve this PR?",
          "createdAt": "2023-06-12T13:09:31Z",
          "updatedAt": "2023-06-12T13:09:31Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi, thinking more about this, status list Token is being referenced in the token-whose-name-we-are-trying-to-find, so it's the status list token that is actually a \"referenced token\". Can we call token-whose-name-we-are-trying-to-find \"a Token with reference\"?",
          "createdAt": "2023-06-13T06:04:16Z",
          "updatedAt": "2023-06-13T06:04:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, I agree and had the same thoughts when I changed the PR. I assume Referencing Token could be better. But let's accept this PR and move discussion to an issue instead...",
          "createdAt": "2023-06-13T06:06:13Z",
          "updatedAt": "2023-06-13T06:06:13Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Multiple approvals and discussions on editors calls, merging",
          "createdAt": "2023-06-14T20:06:46Z",
          "updatedAt": "2023-06-14T20:06:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5WiWIb",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T21:26:33Z",
          "updatedAt": "2023-05-30T21:26:34Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a status list in JWT and CWT representation that describes the individual statuses of multiple subject tokens. The statuses of each subject token are conveyed via a bit array in the status list. Each subject token during issuance is allocated an index which represents a position within this bit array and the value of the bit(s) at this position correspond to the subject tokens status. The document also defines how an issuer of a subject token in JWT or CTW representation references a status list. Status lists may be composed for expressing a range of status types, the document defines two configurations for the most common use cases as well as an extensibility mechanism for custom status list types. The status list may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Subject Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-05-30T21:26:33Z",
              "updatedAt": "2023-05-30T21:26:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WiWe2",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T21:27:18Z",
          "updatedAt": "2023-05-30T21:27:18Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Bit of a suggested revision to the text here.",
              "createdAt": "2023-05-30T21:27:18Z",
              "updatedAt": "2023-05-30T21:27:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WiW6s",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T21:28:41Z",
          "updatedAt": "2023-05-30T21:28:42Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Not super convinced of this, I think this is pending resolution around whether we agree if the status list provider != issuer otherwise I think issuer suffices?",
              "createdAt": "2023-05-30T21:28:41Z",
              "updatedAt": "2023-05-30T21:28:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WlbBH",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-31T09:40:34Z",
          "updatedAt": "2023-05-31T09:40:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "@tplooker Looking at other RFCs like JWT, I see that things that are mentioned in the terminology are capitalized throughout the text. Why does this not apply here?",
              "createdAt": "2023-05-31T09:40:35Z",
              "updatedAt": "2023-05-31T09:40:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5Wvvvx",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-01T12:30:37Z",
          "updatedAt": "2023-06-01T12:30:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5Wv_oH",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-01T13:01:19Z",
          "updatedAt": "2023-06-01T13:01:20Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "This relates to #10 and is in line with the issuer-holder-verifier model described in the SD-JWT spec. Outsourcing the status list hosting to another party has potential privacy benefits so I would definitly include the option",
              "createdAt": "2023-06-01T13:01:20Z",
              "updatedAt": "2023-06-01T13:02:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WweOy",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-01T13:56:54Z",
          "updatedAt": "2023-06-01T13:56:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYOlP",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T19:54:54Z",
          "updatedAt": "2023-06-06T19:54:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nJSON Web Tokens (JWTs) {{RFC7519}} and CBOR Web Tokens (CWTs) {{RFC8392}} as secure token formats, have vast possible applications. Some of these applications can involve issuing a token whereby certain semantics about the token can change over time which are important to be able to communicate to relying parties in an interoperable manner, such as whether the token is considered invalidated or suspended by its issuer.\r\n```\r\n\r\nto match with the rest of terminology",
              "createdAt": "2023-06-06T19:54:54Z",
              "updatedAt": "2023-06-06T19:54:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYO3c",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T19:55:37Z",
          "updatedAt": "2023-06-06T19:55:37Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a status list in JWT and CWT representations that describes the individual statuses of multiple subject tokens. The statuses of each subject token are conveyed via a bit array in the status list. Each subject token during issuance is allocated an index which represents a position within this bit array and the value of the bit(s) at this position correspond to the subject tokens status. The document also defines how an issuer of a subject token in JWT or CTW representation references a status list. Status lists may be composed for expressing a range of status types, the document defines two configurations for the most common use cases as well as an extensibility mechanism for custom status list types. The status list may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Subject Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-06-06T19:55:37Z",
              "updatedAt": "2023-06-06T19:55:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYPv9",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "I am sorry, I am completely lost with the idea of using a term `subject token` to say `digital credential/verifiable credential`. and the definition of a `subject token` does not really give a rationale why it is called `subject token` and only talks about relationship with the status list...",
          "createdAt": "2023-06-06T19:58:16Z",
          "updatedAt": "2023-06-06T19:58:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYuYw",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T20:55:37Z",
          "updatedAt": "2023-06-06T20:55:37Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a status list in JWT and CWT representation that describes the individual statuses of multiple subject tokens. The statuses of each subject token are conveyed via a bit array in the status list. Each subject token during issuance is allocated an index which represents a position within this bit array and the value of the bit(s) at this position correspond to the subject tokens status. The document also defines how an issuer of a subject token in JWT or CWT representation references a status list. Status lists may be composed for expressing a range of status types, the document defines two configurations for the most common use cases as well as an extensibility mechanism for custom status list types. The status list may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Subject Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-06-06T20:55:37Z",
              "updatedAt": "2023-06-06T20:55:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYvAg",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-06T20:57:03Z",
          "updatedAt": "2023-06-06T20:57:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XgVxY",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "I understand the concerns of @Sakurann. \r\n\r\nStatusList2021 just uses the term StatusList2021Credential. I think we could use the term status list token. status list JWT/CWT would be fine as well. ",
          "createdAt": "2023-06-07T16:10:54Z",
          "updatedAt": "2023-06-07T16:10:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XwT1l",
          "commit": {
            "abbreviatedOid": "310a60a"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-09T14:36:24Z",
          "updatedAt": "2023-06-12T15:05:08Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a Status List in JWT and CWT representation that describes the individual statuses of multiple Referenced Tokens. The statuses of all Referenced Tokens are conveyed via a bit array in the Status List. Each Referenced Token during issuance is allocated an index which represents a position within this bit array and the value of the bit(s) at this position correspond to the Referenced Token's status. The document also defines how an issuer of a Referenced Token in JWT or CTW representation references a Status List Token. Status Lists may be composed for expressing a range of Status Types, the document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types. The Status List Token may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Referenced Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-06-09T14:36:25Z",
              "updatedAt": "2023-06-12T15:05:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5X7UO8",
          "commit": {
            "abbreviatedOid": "95bb340"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-12T15:07:12Z",
          "updatedAt": "2023-06-12T15:07:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YBG0D",
          "commit": {
            "abbreviatedOid": "95bb340"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-13T09:24:20Z",
          "updatedAt": "2023-06-13T09:27:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a Status List in JWT and CWT representations that describes the individual statuses of multiple Referenced Tokens. The statuses of all Referenced Tokens are conveyed via a bit array in the Status List. Each Referenced Token is allocated an index during issuance which represents a position within this bit array and the value of the bit(s) at this position correspond to the Referenced Token's status. The document also defines how an issuer of a Referenced Token in JWT or CWT representation references a Status List Token. Status Lists may be composed for expressing a range of Status Types, the document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types. The Status List Token may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Referenced Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-06-13T09:24:20Z",
              "updatedAt": "2023-06-13T09:27:35Z"
            },
            {
              "originalPosition": 121,
              "body": "Can we keep TODOs as issues, pls.? It makes it easier to grasp the TODOs for a certain draft. ",
              "createdAt": "2023-06-13T09:27:28Z",
              "updatedAt": "2023-06-13T09:27:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YBLth",
          "commit": {
            "abbreviatedOid": "95bb340"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T09:33:58Z",
          "updatedAt": "2023-06-13T09:33:58Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "these TODOs are partly resolved in other PRs and I would like to not change them in this PR as this resulsts to even more merge conflicts",
              "createdAt": "2023-06-13T09:33:58Z",
              "updatedAt": "2023-06-13T09:33:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YByAd",
          "commit": {
            "abbreviatedOid": "ee8111f"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "ok. Then please migrate the TODOs afterwards. ",
          "createdAt": "2023-06-13T10:51:51Z",
          "updatedAt": "2023-06-13T10:51:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YFw-P",
          "commit": {
            "abbreviatedOid": "ee8111f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "opened issue #26 to continue the terminology discussion",
          "createdAt": "2023-06-13T19:22:56Z",
          "updatedAt": "2023-06-13T19:22:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 22,
      "id": "PR_kwDOJZ2aqs5SaDaW",
      "title": "Adding to privacy considerations",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/22",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-07T12:17:35Z",
      "updatedAt": "2023-06-19T19:49:24Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "fa0432bb81cc5672625d8f9edfa2706bffab9179",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "privacy",
      "headRefOid": "a1fd5307d96a83685df7bb8dd06671ac72a2840f",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 23,
      "id": "PR_kwDOJZ2aqs5SakUh",
      "title": "first iteration on authorized access",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/23",
      "state": "OPEN",
      "author": "c2bo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-07T13:30:10Z",
      "updatedAt": "2023-06-19T19:49:24Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "fa0432bb81cc5672625d8f9edfa2706bffab9179",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "authorization-statuslist-endpoint",
      "headRefOid": "2a202ef4945029e5a0c076e7628201eb7a3f093c",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "How does the described approach of the holder fetching the status list token compare to the validity credentials as presented by Andreas Freitag?",
          "createdAt": "2023-06-13T16:16:42Z",
          "updatedAt": "2023-06-13T16:16:42Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Imho validity credential would be very similar if we only go the route of the holder presenting the status list - the only benefit would be that we would not need to introduce another standard to check and could re-use the already known mechanism.\r\n\r\nThe main benefit for this approach would be that we could use a hybrid mode: the holder can carry the status lust with him (retrieved using holder authentication) and provide it for offline cases if necessary. For other cases, the verifier can get and check the status list themselves (using verifier authentication).",
          "createdAt": "2023-06-13T17:22:03Z",
          "updatedAt": "2023-06-13T17:22:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YEhyz",
          "commit": {
            "abbreviatedOid": "2a202ef"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T16:11:56Z",
          "updatedAt": "2023-06-13T16:11:56Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I would leave these two points out, as it is a repetition of what is/will be in the privacy section",
              "createdAt": "2023-06-13T16:11:56Z",
              "updatedAt": "2023-06-13T16:11:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOJZ2aqs5THFAQ",
      "title": "ascii art for bit and byte ordering",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/29",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-15T15:32:34Z",
      "updatedAt": "2023-06-17T06:21:32Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "encoding",
      "headRefOid": "57d18cf2655df30ca37cdbc0be729d1d51945254",
      "closedAt": "2023-06-17T06:21:31Z",
      "mergedAt": "2023-06-17T06:21:31Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "1ffaa4afd1bfe26121499417283e27434f7c7d9e"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "after writing this I figured out changing the byte ordering, i.e. starting with byte 0 on the left might be a little more intuitive?",
          "createdAt": "2023-06-15T15:33:17Z",
          "updatedAt": "2023-06-15T15:33:17Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "> after writing this I figured out changing the byte ordering, i.e. starting with byte 0 on the left might be a little more intuitive?\r\n\r\nYeah with fresh eyes I definately think that would be better.",
          "createdAt": "2023-06-16T03:07:09Z",
          "updatedAt": "2023-06-16T03:07:09Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "reversed byte order and added the index to the ascii art",
          "createdAt": "2023-06-16T08:08:42Z",
          "updatedAt": "2023-06-16T08:08:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YaCUp",
          "commit": {
            "abbreviatedOid": "4fb63b0"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "More compact version",
          "createdAt": "2023-06-16T10:59:26Z",
          "updatedAt": "2023-06-16T11:03:04Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\n~~~ ascii-art\r\n\r\nbyte             0                  1               2\r\nbit       7 6 5 4 3 2 1 0    7 6 5 4 3 2 1 0    7\r\n         +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+...\r\nvalues   |1|0|1|1|1|0|0|1|  |1|0|1|0|0|0|1|1|  |0|...\r\n         +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+...\r\nindex     7 6 5 4 3 2 1 0   15   ...  10 9 8   23\r\n         \\_______________/  \\_______________/\r\n                0xB9               0xA3\r\n~~~\r\n~~~\r\n```",
              "createdAt": "2023-06-16T10:59:26Z",
              "updatedAt": "2023-06-16T11:04:29Z"
            },
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nbyte             0                  1                  2\r\nbit       7 6 5 4 3 2 1 0    7 6 5 4 3 2 1 0    7 6 5 4 3 2 1 0\r\n         +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+\r\nvalues   |1|1|0|0|1|0|0|1|  |0|1|0|0|0|1|0|0|  |1|1|1|1|1|0|0|1|\r\n         +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+\r\n          \\ / \\ / \\ / \\ /    \\ / \\ / \\ / \\ /    \\ / \\ / \\ / \\ /\r\nstatus     3   0   2   1      1   0   1   0      3   3   2   1\r\nindex      3   2   1   0      7   6   5   4      11  10  9   8\r\n           \\___________/      \\___________/      \\___________/\r\n                0xC9               0x44               0xF9\r\n```",
              "createdAt": "2023-06-16T11:01:50Z",
              "updatedAt": "2023-06-16T11:03:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YaSD5",
          "commit": {
            "abbreviatedOid": "57d18cf"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T11:44:15Z",
          "updatedAt": "2023-06-16T11:44:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YfsMi",
          "commit": {
            "abbreviatedOid": "57d18cf"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T06:21:22Z",
          "updatedAt": "2023-06-17T06:21:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 30,
      "id": "PR_kwDOJZ2aqs5TK1Fg",
      "title": "adding a subject claim for Status List Token",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/30",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-16T09:02:46Z",
      "updatedAt": "2023-06-17T06:20:15Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "sub",
      "headRefOid": "387f015643c2fd682500a23cd893c75582d1cee8",
      "closedAt": "2023-06-17T06:20:15Z",
      "mergedAt": "2023-06-17T06:20:15Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "560f847ca34ebec674ceccb961638786cfeb970f"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This solves #28 ",
          "createdAt": "2023-06-16T09:16:23Z",
          "updatedAt": "2023-06-16T09:16:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YaISg",
          "commit": {
            "abbreviatedOid": "a4c313f"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T11:17:45Z",
          "updatedAt": "2023-06-16T11:17:46Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n2. The JWT MUST contain a \"sub\" (subject) claim that contains an unique string based identifier for that Referenced Token. The value MUST be equal to that of the \"uri\" claim contained in the \"status\" claim of the Referenced Token.\r\n```",
              "createdAt": "2023-06-16T11:17:45Z",
              "updatedAt": "2023-06-16T11:18:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YaY3Z",
          "commit": {
            "abbreviatedOid": "387f015"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T11:50:35Z",
          "updatedAt": "2023-06-16T11:50:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5Yfr1D",
          "commit": {
            "abbreviatedOid": "387f015"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T06:20:09Z",
          "updatedAt": "2023-06-17T06:20:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 31,
      "id": "PR_kwDOJZ2aqs5TK5Xv",
      "title": "clarify bit and bit_size wording",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/31",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-16T09:15:29Z",
      "updatedAt": "2023-06-16T21:16:47Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "minor_fixes",
      "headRefOid": "248135ca2cc7870e25d5384cf0a416cb04f71003",
      "closedAt": "2023-06-16T21:16:46Z",
      "mergedAt": "2023-06-16T21:16:46Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "a56771322117372d4649d3d2064557854f359cad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YaGQ0",
          "commit": {
            "abbreviatedOid": "6f14f56"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T11:11:18Z",
          "updatedAt": "2023-06-16T11:11:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n2. The claim value object MUST contain a \"bits\" (bit size) attribute with an numeric based value that represents the number of bits per Referenced Token in the Status List (\"lst\") of the Status List JWT. The allowed values for \"bits\" are 1,2,4 and 8.\r\n```",
              "createdAt": "2023-06-16T11:11:19Z",
              "updatedAt": "2023-06-16T11:11:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YaZOY",
          "commit": {
            "abbreviatedOid": "248135c"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T11:50:55Z",
          "updatedAt": "2023-06-16T11:50:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YelDx",
          "commit": {
            "abbreviatedOid": "248135c"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T21:16:40Z",
          "updatedAt": "2023-06-16T21:16:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOJZ2aqs5TLCvr",
      "title": "add as author",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/32",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-16T09:46:21Z",
      "updatedAt": "2023-06-16T21:16:07Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "author",
      "headRefOid": "ad5dfad3ed42c9c3434349b101f07aca0891e045",
      "closedAt": "2023-06-16T21:16:07Z",
      "mergedAt": "2023-06-16T21:16:07Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "e59711c86c82341c3431ba5ed74df58533f4eaad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5Yekw8",
          "commit": {
            "abbreviatedOid": "ad5dfad"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T21:16:02Z",
          "updatedAt": "2023-06-16T21:16:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOJZ2aqs5TNIY8",
      "title": "some spelling fixes",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/33",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixing some spelling errors",
      "createdAt": "2023-06-16T15:53:00Z",
      "updatedAt": "2023-06-16T21:15:52Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "spelling",
      "headRefOid": "257d3878d8fe8e2edf3664d50d0f3a7ea1b223c7",
      "closedAt": "2023-06-16T21:15:51Z",
      "mergedAt": "2023-06-16T21:15:51Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "6411d628b820a190f79238bedc85bee6f74245e6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YcYHJ",
          "commit": {
            "abbreviatedOid": "257d387"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T16:08:09Z",
          "updatedAt": "2023-06-16T16:08:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YekSC",
          "commit": {
            "abbreviatedOid": "257d387"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T21:15:26Z",
          "updatedAt": "2023-06-16T21:15:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOJZ2aqs5TP2FM",
      "title": "fix examples",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/34",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "- fixes the examples to use constant timestamps in gzip encoding\r\n- minor changes/fixes to the ascii art / code blocks",
      "createdAt": "2023-06-17T07:47:54Z",
      "updatedAt": "2023-06-18T20:50:50Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "1ffaa4afd1bfe26121499417283e27434f7c7d9e",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "jwt-examples",
      "headRefOid": "1f6cef985060b5beafde96dc7367e86dd333a339",
      "closedAt": "2023-06-18T20:50:50Z",
      "mergedAt": "2023-06-18T20:50:50Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "d987ce753b8b1644d603650707d537c80bab089d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YfvSA",
          "commit": {
            "abbreviatedOid": "1f6cef9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T07:55:18Z",
          "updatedAt": "2023-06-17T07:55:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YhjAq",
          "commit": {
            "abbreviatedOid": "1f6cef9"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-18T20:50:44Z",
          "updatedAt": "2023-06-18T20:50:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDOJZ2aqs5TgbEl",
      "title": "fix reference token example",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/36",
      "state": "MERGED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #35\r\n\r\n## \ud83d\udcd1 Description\r\n\r\nSimple fix to example",
      "createdAt": "2023-06-21T06:13:35Z",
      "updatedAt": "2023-06-21T21:02:56Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "fa0432bb81cc5672625d8f9edfa2706bffab9179",
      "headRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "headRefName": "tl/fix-example",
      "headRefOid": "d9c847b04806bf201c3333a79fa3a7a2ef603a27",
      "closedAt": "2023-06-21T06:20:10Z",
      "mergedAt": "2023-06-21T06:20:10Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "bee05c44945b9c812ead181f558699990930d8c1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YzTcY",
          "commit": {
            "abbreviatedOid": "d9c847b"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-21T06:19:26Z",
          "updatedAt": "2023-06-21T06:19:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YzTcq",
          "commit": {
            "abbreviatedOid": "d9c847b"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-21T06:19:27Z",
          "updatedAt": "2023-06-21T06:19:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 37,
      "id": "PR_kwDOJZ2aqs5UwYHR",
      "title": "Mike's editorial suggestions",
      "url": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/37",
      "state": "OPEN",
      "author": "selfissued",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-05T23:32:11Z",
      "updatedAt": "2023-07-05T23:32:12Z",
      "baseRepository": "vcstuff/draft-looker-oauth-jwt-cwt-status-list",
      "baseRefName": "main",
      "baseRefOid": "bee05c44945b9c812ead181f558699990930d8c1",
      "headRepository": "selfissued/draft-looker-oauth-jwt-cwt-status-list",
      "headRefName": "mbj-editorial-suggestions",
      "headRefOid": "36c4fe7e0d5ebefb0c710f82531f22940467fe4a",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}